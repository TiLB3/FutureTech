@use "../helpers"as *;

.bordered-grid {
    --itemPaddingY: #{fluid(80, 40)};
    --columns: 1;

    display: grid;
    grid-template-columns: repeat(var(--columns), 1fr);

    &--2-cols {
        --columns: 2;
        --itemPaddingX: #{rem(80)};

        @include laptop {
            --itemPaddingX: #{rem(50)};
        }

        @include mobile-above {
            .bordered-grid__item {
                &:nth-child(odd) {
                    padding-right: var(--itemPaddingX);
                    border-right: var(--border);
                }

                &:nth-child(even) {
                    padding-left: var(--itemPaddingX);

                    @include full-vw-centered-line(bottom, auto, 100%, 50%);
                }
            }
        }

        @include mobile {
            --columns: 1;
        }
    }

    &--3-cols {
        --columns: 3;
        --itemPaddingX: #{rem(50)};

        column-gap: calc(var(--itemPaddingX) * 2);

        @include laptop {
            --itemPaddingX: #{rem(30)};
        }

        @include tablet-above {
            .bordered-grid__item {

                /**
            обращаемся к 1 и 2 элементам в каждой колонке
            */
                &:nth-child(3n - 2),
                &:nth-child(3n - 1) {
                    position: relative;

                    &::after {
                        content: '';
                        position: absolute;
                        left: calc(100% + var(--itemPaddingX));
                        width: rem(1);
                        height: 100%;
                        top: 0;
                        border-right: var(--border);
                    }
                }

                /**
            задаю border 2 колонке
            */

                &:nth-child(3n - 1) {
                    @include full-vw-centered-line(bottom);
                }

                /**
            обращаемся к 2 и 3 элементам в каждой колонке
            */
            }
        }

        @include tablet {
            --columns: 1;

            .bordered-grid__item:not(:last-child) {
                border-bottom: var(--border);
            }
        }


    }

    &--4-cols {
        --columns: 4;
        --itemPaddingX: #{rem(50)};
        column-gap: calc(var(--itemPaddingX) * 2);

        @include laptop {
            --itemPaddingX: #{rem(30)};
        }

        @include tablet-above {
            .bordered-grid__item {

                &:nth-child(4n -3),
                &:nth-child(4n -2),
                &:nth-child(4n -1) {
                    position: relative;

                    &::after {
                        content: '';
                        position: absolute;
                        top: 0;
                        left: calc(100% + var(--itemPaddingX));
                        width: rem(1);
                        height: 100%;
                        background-color: var(--color-dark-15);
                    }
                }
            }
        }

        @include tablet {
            --columns: 2;

            .bordered-grid__item {
                &:nth-child(2n -1) {
                    border-right: var(--border);
                }
            }
        }

        @include mobile {
            --columns: 1;

            .bordered-grid__item {

                &:not(:last-child) {
                    border-right: none;
                }
            }
        }

    }

    &--2-cols,
    &--4-cols {
        @include mobile {
            .bordered-grid__item {

                &:not(:last-child) {
                    border-bottom: var(--border);
                }
            }
        }
    }

    &__item {
        padding-block: var(--itemPaddingY);
    }
}